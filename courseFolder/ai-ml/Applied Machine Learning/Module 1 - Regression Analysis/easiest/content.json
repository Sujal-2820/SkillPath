{
  "module": "Regression Analysis",
  "introduction": {
    "text": "Regression Analysis is a machine learning technique used for predicting a continuous output, like predicting house prices based on size. It shows how the dependent variable (the one we want to predict) changes with respect to one or more independent variables (inputs)."
  },
  "sections": [
    {
      "subheading": {
        "title": "What is Regression?",
        "text": "In regression, we try to find the relationship between input variables (like hours of study) and output (like exam score). It helps us predict a continuous value based on patterns in the data.",
        "additional_text": "Regression is widely used in many areas like finance (predicting stock prices), healthcare (predicting patient outcomes), and more. It's one of the first steps in machine learning and is often considered a foundation for more complex algorithms.",
        "quiz": {
          "question": "What does regression analysis help us predict?",
          "options": [
            "Categorical values",
            "Continuous values",
            "Discrete values",
            "Random values"
          ],
          "correct_answer": "Continuous values"
        }
      }
    },
    {
      "subheading": {
        "title": "Types of Regression",
        "text": "There are several types of regression used in machine learning, each designed for specific kinds of relationships between the data:",
        "additional_text": "- **Linear Regression**: The most basic form, it assumes a straight-line relationship between input and output.\n- **Multiple Linear Regression**: Similar to linear regression but works with multiple input variables.\n- **Polynomial Regression**: Used when the data shows a curved relationship between the input and output.\n- **Ridge and Lasso Regression**: Techniques used to prevent overfitting (making sure the model doesn't perform well only on training data but poorly on new data).",
        "more_additional_text": "Each type of regression has its own uses. For example, when you know the relationship between inputs and output is curved, polynomial regression works better than linear regression.",
        "quiz": {
          "question": "Which type of regression is best suited for curved relationships?",
          "options": [
            "Linear Regression",
            "Multiple Linear Regression",
            "Polynomial Regression",
            "Ridge Regression"
          ],
          "correct_answer": "Polynomial Regression"
        }
      }
    },
    {
      "subheading": {
        "title": "Linear Regression",
        "text": "Linear Regression is the simplest form of regression where the output (dependent variable) is predicted using a straight-line relationship with the input variable.",
        "code": "from sklearn.linear_model import LinearRegression\nimport numpy as np\n\n# Example data\nX = np.array([[1], [2], [3], [4]])\ny = np.array([2, 4, 6, 8])\n\n# Create and train the model\nmodel = LinearRegression().fit(X, y)\n\n# Make a prediction\nprediction = model.predict([[5]])\nprint(prediction)",
        "additional_text": "In the code example above, the model is trained with data where the input is a number and the output is twice the input. The model is then used to predict the value for an input of 5.",
        "quiz": {
          "question": "What is the main characteristic of Linear Regression?",
          "options": [
            "It can only predict categorical outcomes.",
            "It assumes a linear relationship between input and output.",
            "It uses multiple input variables only.",
            "It can only be used for polynomial relationships."
          ],
          "correct_answer": "It assumes a linear relationship between input and output."
        }
      }
    },
    {
      "subheading": {
        "title": "Evaluating Regression Models",
        "text": "To know how well a regression model performs, we use evaluation metrics. Two common metrics are:",
        "additional_text": "- **Mean Squared Error (MSE)**: Measures how far the predictions are from the actual values on average.\n- **R-squared**: Tells us how well the model explains the variance in the data. A higher R-squared value means a better fit to the data.",
        "more_additional_text": "Evaluating a model helps understand if it's accurate enough for real-world applications. Lower MSE values and higher R-squared values are indicators of a good model.",
        "quiz": {
          "question": "What does a higher R-squared value indicate?",
          "options": [
            "A worse model fit",
            "A better model fit",
            "No impact on model fit",
            "Only useful in polynomial regression"
          ],
          "correct_answer": "A better model fit"
        }
      }
    },
    {
      "subheading": {
        "title": "Implementing a Full Regression Pipeline",
        "text": "The complete process of building a regression model involves several steps. Letâ€™s walk through them:",
        "additional_text": "- **Data Collection**: First, collect the data that includes both input variables and the output to predict.\n- **Data Preprocessing**: Clean the data, handle missing values, and scale features as necessary.\n- **Model Selection**: Choose the appropriate type of regression based on the data (Linear, Polynomial, Ridge, etc.).\n- **Model Training**: Train the model using the collected data.\n- **Model Evaluation**: Test the model on new data using evaluation metrics like MSE or R-squared.",
        "code": "from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nimport numpy as np\n\n# Data\nX_train = np.array([[1], [2], [3], [4], [5]])\ny_train = np.array([1.5, 2.1, 3.3, 4.0, 5.2])\nX_test = np.array([[6], [7]])\ny_test = np.array([6.1, 7.4])\n\n# Model\nmodel = LinearRegression().fit(X_train, y_train)\n\n# Predictions\ny_pred = model.predict(X_test)\n\n# Evaluation\nmse = mean_squared_error(y_test, y_pred)\nprint(f'Mean Squared Error: {mse}')",
        "more_additional_text": "In the example above, the full pipeline is shown, starting from data collection to model evaluation. This is the standard process for building a machine learning model.",
        "quiz": {
          "question": "What is the first step in building a regression model?",
          "options": [
            "Model Evaluation",
            "Data Collection",
            "Data Preprocessing",
            "Model Training"
          ],
          "correct_answer": "Data Collection"
        }
      }
    }
  ],
  "conclusion": {
    "text": "Regression analysis is a fundamental concept in machine learning for predicting continuous values. Understanding different types of regression, regularization techniques, and evaluation methods helps build models that perform well on both training and new data."
  }
}
